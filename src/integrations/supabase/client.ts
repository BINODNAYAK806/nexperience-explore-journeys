
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jtzsavmdnziyyxoebday.supabase.co";
const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp0enNhdm1kbnppeXl4b2ViZGF5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxNDQzNjgsImV4cCI6MjA1NzcyMDM2OH0.pCSbpmkWHXOAuQMUYWU42k3xStBMm2IcwZao9GOQqGM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY);

// Function to handle RLS-protected inserts for non-authenticated users
export const insertJourneyRequest = async (journeyData: {
  destination: string;
  travel_date: string;
  contact_number: string;
}) => {
  try {
    const response = await fetch(`${SUPABASE_URL}/rest/v1/journey_requests`, {
      method: 'POST',
      headers: {
        'apikey': SUPABASE_ANON_KEY,
        'Content-Type': 'application/json',
        'Prefer': 'return=minimal',
      },
      body: JSON.stringify({
        destination: journeyData.destination,
        travel_date: journeyData.travel_date,
        contact_number: journeyData.contact_number,
        status: 'pending' // Changed from 'new' to 'pending' to match dashboard expectations
      })
    });

    // Handle HTTP status errors
    if (!response.ok) {
      return { 
        data: null, 
        error: `Server responded with status: ${response.status}` 
      };
    }

    // For 'return=minimal', the response body will be empty (HTTP 201 Created)
    // So we return a success object without trying to parse JSON
    if (response.headers.get('Prefer') === 'return=minimal' || response.status === 201) {
      return { 
        data: { success: true }, 
        error: null 
      };
    }

    // Only try to parse JSON if we expect a JSON response
    const contentType = response.headers.get('content-type');
    if (contentType && contentType.includes('application/json')) {
      const data = await response.json();
      return { data, error: null };
    }

    return { 
      data: { success: true }, 
      error: null 
    };
  } catch (error) {
    console.error('Exception in insertJourneyRequest:', error);
    return { 
      data: null, 
      error: error instanceof Error ? error.message : 'Unknown error' 
    };
  }
};
